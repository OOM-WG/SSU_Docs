import{_ as U,a6 as r,L as p,M as u,W as d,a7 as t,aa as n,h as o,P as a}from"./chunks/framework.DSr6HixA.js";const g=JSON.parse('{"title":"ShiroSUに対するネガティブな意見について","description":"","frontmatter":{"layout":"doc","footer":false,"breadcrumbs":[{"title":"ShiroSU","link":"/ja"},{"title":"ssu","link":""},{"title":"ShiroSUに対するネガティブな意見について","link":"/ja/ssu/defense"}]},"headers":[],"relativePath":"ja/ssu/defense.md","filePath":"ja/ssu/defense.md","lastUpdated":1755655878000}'),b={name:"ja/ssu/defense.md"};function f(k,e,m,P,h,_){const s=r("ArticleMetadata"),i=r("NolebasePageProperties"),l=r("VPNolebaseInlineLinkPreview"),S=r("NolebaseGitContributors"),c=r("NolebaseGitChangelog");return u(),p("div",null,[e[14]||(e[14]=d("h1",{id:"shirosuに対するネガティブな意見について",tabindex:"-1"},[o("ShiroSUに対するネガティブな意見について "),d("a",{class:"header-anchor",href:"#shirosuに対するネガティブな意見について","aria-label":"Permalink to “ShiroSUに対するネガティブな意見について”"},"​")],-1)),t(s),t(i),e[15]||(e[15]=n('<h2 id="利益相反行為に関する声明" tabindex="-1">利益相反行為に関する声明 <a class="header-anchor" href="#利益相反行為に関する声明" aria-label="Permalink to “利益相反行為に関する声明”">​</a></h2><p>私たちは他の<code>ROOT実装</code>と競争しておらず、人間関係のくだらないことに巻き込まれるのも嫌です。 ですから、他の人が何を言おうと気にせず、自分が欲しいものを選んでください。使いやすいと思うものを使えば良いのです。</p><blockquote><p><code>SUU</code>と<code>SSU</code>は姉妹プロジェクトです。<code>SUU</code>は<code>蘇柚</code>、<code>SSU</code>は<code>ShiroSU</code>の略称であることに注意してください。 以下、<code>SSU</code>と略称します。</p></blockquote><h2 id="ssuプロジェクト誕生以来、多くのネガティブな意見を聞いてきました" tabindex="-1"><code>SSU</code>プロジェクト誕生以来、多くのネガティブな意見を聞いてきました <a class="header-anchor" href="#ssuプロジェクト誕生以来、多くのネガティブな意見を聞いてきました" aria-label="Permalink to “SSUプロジェクト誕生以来、多くのネガティブな意見を聞いてきました”">​</a></h2><ul><li>SSUはKernelSUをフォークしたものだと疑っている。</li><li>またKernelSUの派生版か。評価しない。</li><li>SSUはPPTプロジェクトだ。</li><li>まだ完成していないのに宣伝している。</li><li>SSUのSUが書けるなら何も言わない。</li><li>空っぽの殻にKernelSUのAPIを当てはめたように見える。</li></ul><p>など、様々なネガティブな発言があります。そして、<code>Preview</code>状態のプロジェクトに対して、細部について罵倒するのは全く意味がありません。</p><h2 id="ssuプロジェクトのオープンソースに関する説明" tabindex="-1">SSUプロジェクトのオープンソースに関する説明 <a class="header-anchor" href="#ssuプロジェクトのオープンソースに関する説明" aria-label="Permalink to “SSUプロジェクトのオープンソースに関する説明”">​</a></h2><p><code>SSU</code>プロジェクトは<code>OOM. WG.</code>の所属プロジェクトであり、@安音咲汀がユーザー空間実装の開発者、@Linsoがカーネル空間実装の開発者です。SSUのドキュメント内容は @YumeYukaが作成し、他のメンバーと協力して最適化しました。プロジェクト設立から6月末現在、<code>SSU</code>マネージャーは<code>モジュールマネージャー</code>として使用できるまで開発されており、カーネル空間の実装は @Linsoの個人的な事情により開発が遅れています。</p>',8)),d("p",null,[e[3]||(e[3]=d("code",null,"SSU",-1)),e[4]||(e[4]=o("は既に一部の",-1)),t(l,{href:"https://github.com/OOM-WG/ShiroSU",target:"_blank",rel:"noreferrer"},{default:a(()=>e[0]||(e[0]=[o("設定",-1)])),_:1,__:[0]}),e[5]||(e[5]=o("と",-1)),t(l,{href:"https://github.com/OOM-WG/WMLang",target:"_blank",rel:"noreferrer"},{default:a(()=>e[1]||(e[1]=[o("コアコンポーネント",-1)])),_:1,__:[1]}),e[6]||(e[6]=o("を オープンソース化しており、",-1)),t(l,{href:"https://github.com/OOM-WG",target:"_blank",rel:"noreferrer"},{default:a(()=>e[2]||(e[2]=[o("https://github.com/OOM-WG",-1)])),_:1,__:[2]}),e[7]||(e[7]=o("を参照してください。マネージャーの全コードは@安音咲汀が作成し、@YumeYukaが一部のページの最適化に携わっています。ユーザー空間コードは全て ",-1)),e[8]||(e[8]=d("code",null,"GPL",-1)),e[9]||(e[9]=o("ライセンスを回避しており、",-1)),e[10]||(e[10]=d("code",null,"WebUI",-1)),e[11]||(e[11]=o("実装を含みます。カーネル空間コードは@Linsoが担当し、オープンソース化の程度は@Linsoの完成度によって決まります。ドキュメントについては、",-1)),e[12]||(e[12]=d("code",null,"vitepress",-1)),e[13]||(e[13]=o(" を使用しており、現時点では記事部分のみの公開を検討しています。",-1))]),e[16]||(e[16]=n('<p>具体的なオープンソースの方向性としては、<code>SSU</code>プロジェクトでは開発過程で作成された比較的成熟したフレームワーク/ツールなどを主にオープンソース化します。コアソースコードのオープンソース化は最優先事項ではありません。</p><p><code>SSU</code>のインターフェースはサードパーティライブラリを使用して開発されています。サードパーティライブラリの不足により、一部のUI下層部分の問題について、<code>SSU</code>の開発者は現状解決できません。</p><h2 id="ssu-kernelsu-forkについて" tabindex="-1">SSU == KernelSU Forkについて <a class="header-anchor" href="#ssu-kernelsu-forkについて" aria-label="Permalink to “SSU == KernelSU Forkについて”">​</a></h2><blockquote><p>評価：<code>KernelSU Next</code>を遊んでいる。</p></blockquote><p><code>OOM. WG.</code>メンバーの投稿では、<code>KernelSU</code>の派生版ではないと明記されています。安易に結論を出すのは時期尚早であり、<code>SSU</code>はまだ開発中です。root実装はカーネル空間実装コードの開発状況を待つ必要があります。</p><p><code>SSU</code>もカーネルベースのroot実装ですが、プロジェクト間に直接的な関連性があるわけではありません。技術的な実装で重複があるのはごく自然な現象であり、この重複を過度に解釈する意味はありません。</p><p><code>KernelSU</code>のAPIをラップしたものだと言う人もいますが、<code>KernelSU</code>には汎用的なAPIがありません。<code>SSU</code>の全てのコードは、様々なモジュール実装を持つroot 実装を対象とした汎用的な開発であり、<code>SSU</code>本体は<code>Kotlin</code>プロジェクトであり、大部分のコードは<code>Kotlin</code>の<code>JVM/Native</code>実装です。<code>Kotlin</code>で実装できないごく一部のコードのみが<code>C++</code>で実装されています。他のroot実装の多くは<code>Kotlin/Java</code>でソフトウェアを開発し、<code>C++/Rust</code>でユーザー空間ツールを開発しています。<code>SSU</code>がフォークであるというのは全くのデタラメです。</p><p>また、<code>SSU</code>の更新履歴を追跡し、具体的な更新内容を詳しく調べれば、<code>SSU</code>が徐々に<code>SU CLI</code>、汎用操作、汎用モジュールインストールなどを実現していることが分かります。ただし、これらの内容は後続の内容のための準備であり、更新ログには記載されていません。</p><h2 id="最後に" tabindex="-1">最後に <a class="header-anchor" href="#最後に" aria-label="Permalink to “最後に”">​</a></h2><p>ネガティブな意見には対応しません。<code>SSU</code>は高度に独立したプロジェクトであり、絵空事ではありません。カーネル空間の実装は<code>7月末</code>までに完了する予定です。ご期待ください。</p>',10)),t(S),t(c)])}const O=U(b,[["render",f]]);export{g as __pageData,O as default};
