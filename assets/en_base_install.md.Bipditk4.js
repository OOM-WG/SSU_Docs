import{_ as d,a6 as e,L as c,M as u,W as a,a7 as o,aa as h,h as m}from"./chunks/framework.DSr6HixA.js";const U=JSON.parse('{"title":"Installation Guide","description":"Detailed ShiroSU Installation Steps and Configuration Instructions","frontmatter":{"layout":"doc","title":"Installation Guide","description":"Detailed ShiroSU Installation Steps and Configuration Instructions","outline":"deep","footer":false,"breadcrumbs":[{"title":"ShiroSU","link":"/en"},{"title":"base","link":""},{"title":"Installation Guide","link":"/en/base/install"}]},"headers":[],"relativePath":"en/base/install.md","filePath":"en/base/install.md","lastUpdated":1755655878000}'),g={name:"en/base/install.md"};function p(b,t,f,S,_,v){const n=e("ArticleMetadata"),i=e("NolebasePageProperties"),s=e("Downloaded"),l=e("NolebaseGitContributors"),r=e("NolebaseGitChangelog");return u(),c("div",null,[t[0]||(t[0]=a("h1",{id:"download-shirosu-manager",tabindex:"-1"},[m("Download ShiroSU Manager "),a("a",{class:"header-anchor",href:"#download-shirosu-manager","aria-label":"Permalink to “Download ShiroSU Manager”"},"​")],-1)),o(n),o(i),o(s),t[1]||(t[1]=h('<h2 id="obtaining-root-permissions" tabindex="-1">Obtaining Root Permissions <a class="header-anchor" href="#obtaining-root-permissions" aria-label="Permalink to “Obtaining Root Permissions”">​</a></h2><h3 id="authorizing-through-other-managers" tabindex="-1">Authorizing through other managers <a class="header-anchor" href="#authorizing-through-other-managers" aria-label="Permalink to “Authorizing through other managers”">​</a></h3><p>When using <code>ShiroSU</code> as a module manager, you need to pre-install a Root solution like <code>Magisk</code> or <code>KernelSU</code>.</p><ol><li>Grant Root permissions to the <code>ShiroSU</code> application in the <code>Magisk</code> or <code>KernelSU</code> manager.</li><li>After authorization, <code>ShiroSU</code> will automatically detect and load the module list for subsequent management.</li></ol><h3 id="through-shirosu-under-development" tabindex="-1">Through ShiroSU (Under Development) <a class="header-anchor" href="#through-shirosu-under-development" aria-label="Permalink to “Through ShiroSU (Under Development)”">​</a></h3><div class="note custom-block github-alert"><p class="custom-block-title">NOTE</p><p>The native Root implementation of <code>ShiroSU</code> is under development and is not currently supported in this version.</p></div><hr><h2 id="module-manager-usage-instructions" tabindex="-1">Module Manager Usage Instructions <a class="header-anchor" href="#module-manager-usage-instructions" aria-label="Permalink to “Module Manager Usage Instructions”">​</a></h2><p>The module management interface provides centralized control over all installed modules, supporting search, sorting, enabling, disabling, and uninstalling core functions.</p><h3 id="_1-global-operations-for-module-lists" tabindex="-1">1. Global Operations for Module Lists <a class="header-anchor" href="#_1-global-operations-for-module-lists" aria-label="Permalink to “1. Global Operations for Module Lists”">​</a></h3><p>Located in the top right corner of the page, this provides one-click batch processing for all modules.</p><ul><li><strong>Enable All</strong>: Activates all modules in the list.</li><li><strong>Disable All</strong>: Disables all modules in the list.</li><li><strong>Update All</strong>: Checks and updates all modules to the latest version.</li></ul><h3 id="_2-fine-grained-operations-for-individual-modules" tabindex="-1">2. Fine-grained Operations for Individual Modules <a class="header-anchor" href="#_2-fine-grained-operations-for-individual-modules" aria-label="Permalink to “2. Fine-grained Operations for Individual Modules”">​</a></h3><p>Each module is displayed as a separate card and supports the following interactions:</p><ul><li><p><strong>Status Switching</strong> Use the switch on the card to enable or disable the module. The module card background will turn gray when disabled.</p></li><li><p><strong>Uninstall Module</strong> Removes the specified module from the module list. After completion, the module card will display a strikethrough style.</p></li><li><p><strong>Favorite and Pin to Top</strong> By <strong>long-pressing</strong> the module card, you can add it to your favorites and pin it to the top of the list for quick access.</p></li><li><p><strong>Exclusive Function Access</strong></p><ul><li><strong>&quot;Interface&quot; button</strong>: Launches the module&#39;s built-in WebUI.</li><li><strong>&quot;Function&quot; button</strong>: Executes the module&#39;s <code>action.sh</code> script.</li></ul></li></ul><h3 id="_3-command-set-extension-modules" tabindex="-1">3. Command Set Extension Modules <a class="header-anchor" href="#_3-command-set-extension-modules" aria-label="Permalink to “3. Command Set Extension Modules”">​</a></h3><p>The system supports loading additional command-line toolsets by installing independent modules to enhance terminal functionality.</p><ul><li><strong>Available Extension Modules</strong>: <code>coreutils</code>, <code>busybox</code>, <code>sush</code></li></ul><div class="warning custom-block github-alert"><p class="custom-block-title">WARNING</p><p>These extension modules are planned to be directly integrated into the <code>ShiroSU</code> main program in the future.</p></div><hr>',20)),o(l),o(r)])}const x=d(g,[["render",p]]);export{U as __pageData,x as default};
