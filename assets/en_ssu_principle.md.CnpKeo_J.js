import{_ as c,a6 as i,L as g,M as e,W as n,a7 as a,aa as t,h as l,O as A,P as h,b8 as y}from"./chunks/framework.DSr6HixA.js";const f=JSON.parse('{"title":"ShiroSU Kernel Privilege Escalation Explained","description":"","frontmatter":{"layout":"doc","title":"ShiroSU Kernel Privilege Escalation Explained","footer":false,"breadcrumbs":[{"title":"ShiroSU","link":"/en"},{"title":"ssu","link":""},{"title":"ShiroSU Kernel Privilege Escalation Explained","link":"/en/ssu/principle"}]},"headers":[],"relativePath":"en/ssu/principle.md","filePath":"en/ssu/principle.md","lastUpdated":1755655878000}'),D={name:"en/ssu/principle.md"},C={align:"center"};function B(u,s,F,E,m,b){const k=i("ArticleMetadata"),p=i("NolebasePageProperties"),r=i("Mermaid"),d=i("NolebaseGitContributors"),o=i("NolebaseGitChangelog");return e(),g("div",null,[s[1]||(s[1]=n("h1",{id:"shirosu-kernel-privilege-escalation-explained",tabindex:"-1"},[l("ShiroSU Kernel Privilege Escalation Explained "),n("a",{class:"header-anchor",href:"#shirosu-kernel-privilege-escalation-explained","aria-label":"Permalink to “ShiroSU Kernel Privilege Escalation Explained”"},"​")],-1)),a(k),a(p),s[2]||(s[2]=t('<h2 id="_1-overview" tabindex="-1">1. Overview <a class="header-anchor" href="#_1-overview" aria-label="Permalink to “1. Overview”">​</a></h2><p>The ShiroSU kernel component is a module for privilege escalation and SELinux manipulation on the Android kernel:</p><ul><li><strong>Root privilege elevation</strong>: Automatically elevates a specified process to root.</li><li><strong>Capability bypass</strong>: Bypasses Linux capability restrictions by hooking the capability checking functions.</li><li><strong>SELinux bypass</strong>: Hooks SELinux access control to permit sensitive operations.</li><li><strong>Dynamic process monitoring</strong>: Monitors <code>su</code> execution to automatically trigger privilege escalation.</li></ul><hr><h2 id="_2-technical-architecture-and-core-mechanisms" tabindex="-1">2. Technical Architecture and Core Mechanisms <a class="header-anchor" href="#_2-technical-architecture-and-core-mechanisms" aria-label="Permalink to “2. Technical Architecture and Core Mechanisms”">​</a></h2><h3 id="_2-1-key-hook-points-and-probe-deployment" tabindex="-1">2.1 Key Hook Points and Probe Deployment <a class="header-anchor" href="#_2-1-key-hook-points-and-probe-deployment" aria-label="Permalink to “2.1 Key Hook Points and Probe Deployment”">​</a></h3><table tabindex="0"><thead><tr><th>Probe Type</th><th>Hook Function</th><th>Description</th></tr></thead><tbody><tr><td>kprobe</td><td>sys_execve (as needed)</td><td>Monitors execution of sensitive commands, triggering privilege escalation.</td></tr><tr><td>kretprobe</td><td>cap_capable</td><td>Bypasses Linux capability checks.</td></tr><tr><td>kretprobe</td><td>avc_denied</td><td>Bypasses SELinux access control.</td></tr></tbody></table><h4 id="probe-registration-flow" tabindex="-1">Probe Registration Flow <a class="header-anchor" href="#probe-registration-flow" aria-label="Permalink to “Probe Registration Flow”">​</a></h4>',8)),n("div",C,[(e(),A(y,null,{default:h(()=>[a(r,{id:"mermaid-94",class:"mermaid my-class",graph:"flowchart%20TD%0A%20%20%20%20A%5BModule%20Loading%5D%20--%3E%20B%5BRegister%20execve%20kprobe%5D%0A%20%20%20%20B%20--%3E%20C%5BRegister%20cap_capable%20kretprobe%5D%0A%20%20%20%20C%20--%3E%20D%5BRegister%20avc_denied%20kretprobe%5D%0A%20%20%20%20D%20--%3E%20E%5BMonitor%2FHijack%20Sensitive%20Operations%5D%0A"})]),fallback:h(()=>s[0]||(s[0]=[l(" Loading... ",-1)])),_:1}))]),s[3]||(s[3]=t(`<hr><h3 id="_2-2-core-privilege-escalation-logic" tabindex="-1">2.2 Core Privilege Escalation Logic <a class="header-anchor" href="#_2-2-core-privilege-escalation-logic" aria-label="Permalink to “2.2 Core Privilege Escalation Logic”">​</a></h3><h4 id="code-snippet" tabindex="-1">Code Snippet <a class="header-anchor" href="#code-snippet" aria-label="Permalink to “Code Snippet”">​</a></h4><div class="language-c"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki shiki-themes github-light github-dark-dimmed" style="--shiki-light:#24292e;--shiki-dark:#adbac7;--shiki-light-bg:#fff;--shiki-dark-bg:#22272e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">struct</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> cred </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">cred </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">struct</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> cred </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">__task_cred</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(current);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">// 1. Elevate to root</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">cred</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">uid </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> cred</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">euid </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> cred</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">suid </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> cred</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">fsuid </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> GLOBAL_ROOT_UID;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">cred</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">gid </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> cred</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">egid </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> cred</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">sgid </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> cred</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">fsgid </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> GLOBAL_ROOT_GID;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">cred</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">securebits </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">// 2. Grant all capabilities</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">memset</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&amp;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">cred</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">-&gt;</span><span style="--shiki-light:#E36209;--shiki-dark:#F69D50;">cap_inheritable</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">0x</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">ff</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">sizeof</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">kernel_cap_t</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">));</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">memset</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&amp;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">cred</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">-&gt;</span><span style="--shiki-light:#E36209;--shiki-dark:#F69D50;">cap_permitted</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">0x</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">ff</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">sizeof</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">kernel_cap_t</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">));</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">memset</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&amp;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">cred</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">-&gt;</span><span style="--shiki-light:#E36209;--shiki-dark:#F69D50;">cap_effective</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">0x</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">ff</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">sizeof</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">kernel_cap_t</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">));</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">memset</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&amp;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">cred</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">-&gt;</span><span style="--shiki-light:#E36209;--shiki-dark:#F69D50;">cap_bset</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">0x</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">ff</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">sizeof</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">kernel_cap_t</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">));</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">memset</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&amp;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">cred</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">-&gt;</span><span style="--shiki-light:#E36209;--shiki-dark:#F69D50;">cap_ambient</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">0x</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">ff</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">sizeof</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">kernel_cap_t</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">));</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">// 3. Disable seccomp (as needed)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">current_thread_info</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">()</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">syscall_work </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&amp;=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> ~</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">SYSCALL_WORK_SECCOMP;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">current_thread_info</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">()</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">flags </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&amp;=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> ~</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(TIF_SECCOMP </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">|</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> _TIF_SECCOMP);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">current</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">seccomp.mode </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">current</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">seccomp.filter </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> NULL</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">// 4. Set root group</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> (cred</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">group_info) {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">    // Set group to root ...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}</span></span></code></pre></div><p><strong>Detailed Explanation:</strong></p><ul><li><strong>UID/GID Elevation</strong>: Sets all user and group IDs of the current process to 0, obtaining root privileges.</li><li><strong>Full Capability Grant</strong>: Sets all Linux <code>capability</code> bits to <code>1</code>, giving the process all kernel capabilities.</li><li><strong>Seccomp Disable</strong>: Disables the Linux system call filtering mechanism (<code>seccomp</code>), allowing the process to invoke any system call.</li><li><strong>Root Group Setting</strong>: Sets the process&#39;s <code>group_info</code> to the root group, preventing group-based access restrictions.</li></ul><hr><h3 id="_2-3-selinux-bypass-mechanism" tabindex="-1">2.3 SELinux Bypass Mechanism <a class="header-anchor" href="#_2-3-selinux-bypass-mechanism" aria-label="Permalink to “2.3 SELinux Bypass Mechanism”">​</a></h3><h4 id="code-snippet-1" tabindex="-1">Code Snippet <a class="header-anchor" href="#code-snippet-1" aria-label="Permalink to “Code Snippet”">​</a></h4><div class="language-c"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki shiki-themes github-light github-dark-dimmed" style="--shiki-light:#24292e;--shiki-dark:#adbac7;--shiki-light-bg:#fff;--shiki-dark-bg:#22272e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">// avc_denied kretprobe handler</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> (current</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">real_cred</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">uid.val </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">==</span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"> /* Whitelisted UID */</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    regs-&gt;regs[</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">  // Allow for whitelisted UID</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">} </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">else</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> if</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">!</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">current</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">real_cred</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">uid.val) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    regs-&gt;regs[</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">  // Allow for root</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}</span></span></code></pre></div><p><strong>Detailed Explanation:</strong></p><ul><li><strong>SELinux Mechanism</strong>: <code>SELinux</code> uses access control decision functions (like <code>avc_denied</code>) to restrict process resource access.</li><li><strong>kretprobe Hook</strong>: The module hooks <code>avc_denied</code> using a kretprobe, intercepting the return value.</li><li><strong>UID Check</strong>: Only applies to specific <code>UIDs</code> (such as the ShiroSU manager and any whitelisted UID), or <code>root</code>.</li><li><strong>Force Allow</strong>: Sets the return value to 0, indicating access permission, bypassing SELinux security policies.</li></ul><hr><h3 id="_2-4-capability-check-bypass-cap-capable" tabindex="-1">2.4 Capability Check Bypass (cap_capable) <a class="header-anchor" href="#_2-4-capability-check-bypass-cap-capable" aria-label="Permalink to “2.4 Capability Check Bypass (cap_capable)”">​</a></h3><h4 id="code-snippet-2" tabindex="-1">Code Snippet <a class="header-anchor" href="#code-snippet-2" aria-label="Permalink to “Code Snippet”">​</a></h4><div class="language-c"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki shiki-themes github-light github-dark-dimmed" style="--shiki-light:#24292e;--shiki-dark:#adbac7;--shiki-light-bg:#fff;--shiki-dark-bg:#22272e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">// cap_capable kretprobe handler</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> (current</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">real_cred</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">uid.val </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">==</span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"> /* Whitelisted UID */</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    regs-&gt;regs[</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">  // Allow for whitelisted UID</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">} </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">else</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> if</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">!</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">current</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">real_cred</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">uid.val) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    regs-&gt;regs[</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">  // Allow for root</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}</span></span></code></pre></div><p><strong>Detailed Explanation:</strong></p><ul><li><strong>cap_capable</strong>: The core Linux kernel function for capability checks.</li><li><strong>kretprobe Hook</strong>: Hooks the return value of the capability checking function.</li><li><strong>UID Check and Allow</strong>: Returns <code>0</code> for specified <code>UIDs</code> or <code>root</code>, bypassing all capability checks.</li></ul><hr><h3 id="_2-5-process-monitoring-and-automatic-privilege-escalation" tabindex="-1">2.5 Process Monitoring and Automatic Privilege Escalation <a class="header-anchor" href="#_2-5-process-monitoring-and-automatic-privilege-escalation" aria-label="Permalink to “2.5 Process Monitoring and Automatic Privilege Escalation”">​</a></h3><ul><li>Hooks <code>sys_execve</code> (specific name depends on kernel version and architecture) to monitor process execution of <code>su</code>.</li><li>Automatically calls the privilege escalation function when <code>su</code> is detected.</li></ul><div class="language-c line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki shiki-themes github-light github-dark-dimmed" style="--shiki-light:#24292e;--shiki-dark:#adbac7;--shiki-light-bg:#fff;--shiki-dark-bg:#22272e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">char</span><span style="--shiki-light:#E36209;--shiki-dark:#F69D50;"> buf</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">[</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">128</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> {</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">};</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">struct</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> Param param;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">param </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> *</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">struct</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> Param </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)regs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">-&gt;</span><span style="--shiki-light:#E36209;--shiki-dark:#F69D50;">regs</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">[</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">];</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> (</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">copy_from_user</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(buf, param.filename, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">sizeof</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(buf) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">))</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    return</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">!</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">strcmp</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(buf, </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;/system/bin/su&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)) {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">    // Elevate process to root ...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p><strong>Explanation</strong>:</p><ul><li>Monitors <code>su</code> execution and automatically elevates to <code>root</code>.</li></ul><hr><h2 id="_3-disclaimer" tabindex="-1">3. Disclaimer <a class="header-anchor" href="#_3-disclaimer" aria-label="Permalink to “3. Disclaimer”">​</a></h2><h3 id="_3-1-document-description" tabindex="-1">3.1 Document Description <a class="header-anchor" href="#_3-1-document-description" aria-label="Permalink to “3.1 Document Description”">​</a></h3><ul><li>The code examples in this document are test code or pseudocode from ShiroSU kernel parts, potentially with limitations in quality and completeness, used for testing purposes. Please handle with caution.</li><li>This document aims to demonstrate ongoing kernel code evolution and illustrate its functionality rather than providing complete, production-ready code.</li></ul><h3 id="_3-2-other-disclaimers" tabindex="-1">3.2 Other Disclaimers <a class="header-anchor" href="#_3-2-other-disclaimers" aria-label="Permalink to “3.2 Other Disclaimers”">​</a></h3><ul><li><code>OOM. WG.</code> is committed to technical communication and community building. We respect every developer&#39;s efforts and achievements.</li></ul>`,30)),a(d),a(o)])}const v=c(D,[["render",B]]);export{f as __pageData,v as default};
