import{_ as A,a6 as i,L as y,M as n,W as h,a7 as a,aa as l,h as k,O as o,P as t,b8 as c}from"./chunks/framework.DSr6HixA.js";const f=JSON.parse('{"title":"ShiroSU カーネル権限昇格部分解説","description":"","frontmatter":{"layout":"doc","title":"ShiroSU カーネル権限昇格部分解説","footer":false,"breadcrumbs":[{"title":"ShiroSU","link":"/ja"},{"title":"ssu","link":""},{"title":"ShiroSU カーネル権限昇格部分解説","link":"/ja/ssu/principle"}]},"headers":[],"relativePath":"ja/ssu/principle.md","filePath":"ja/ssu/principle.md","lastUpdated":1755655878000}'),D={name:"ja/ssu/principle.md"},C={align:"center"};function B(E,s,F,b,u,_){const p=i("ArticleMetadata"),e=i("NolebasePageProperties"),r=i("Mermaid"),d=i("NolebaseGitContributors"),g=i("NolebaseGitChangelog");return n(),y("div",null,[s[1]||(s[1]=h("h1",{id:"shirosu-カーネル権限昇格部分解説",tabindex:"-1"},[k("ShiroSU カーネル権限昇格部分解説 "),h("a",{class:"header-anchor",href:"#shirosu-カーネル権限昇格部分解説","aria-label":"Permalink to “ShiroSU カーネル権限昇格部分解説”"},"​")],-1)),a(p),a(e),s[2]||(s[2]=l('<h2 id="_1-概要" tabindex="-1">1. 概要 <a class="header-anchor" href="#_1-概要" aria-label="Permalink to “1. 概要”">​</a></h2><p>ShiroSU カーネル部分は、Android カーネルに対する権限昇格と SELinux 処理の部分です。</p><ul><li><strong>root 権限昇格</strong>: 指定されたプロセスを自動的に root に昇格します。</li><li><strong>能力管理バイパス</strong>: hook を使用して能力チェック関数をフックし、Linux の能力制限をバイパスします。</li><li><strong>SELinux バイパス</strong>: SELinux アクセス制御をフックし、機密操作を許可します。</li><li><strong>動的プロセス監視</strong>: <code>su</code> の実行を監視し、自動的に権限昇格操作をトリガーします。</li></ul><hr><h2 id="_2-技術アーキテクチャとコアメカニズム" tabindex="-1">2. 技術アーキテクチャとコアメカニズム <a class="header-anchor" href="#_2-技術アーキテクチャとコアメカニズム" aria-label="Permalink to “2. 技術アーキテクチャとコアメカニズム”">​</a></h2><h3 id="_2-1-主要-hook-ポイントとプローブの配置" tabindex="-1">2.1 主要 Hook ポイントとプローブの配置 <a class="header-anchor" href="#_2-1-主要-hook-ポイントとプローブの配置" aria-label="Permalink to “2.1 主要 Hook ポイントとプローブの配置”">​</a></h3><table tabindex="0"><thead><tr><th>プローブタイプ</th><th>Hook 関数</th><th>機能説明</th></tr></thead><tbody><tr><td>kprobe</td><td>sys_execve (状況に応じて)</td><td>敏感なコマンド実行を監視し、権限昇格をトリガー</td></tr><tr><td>kretprobe</td><td>cap_capable</td><td>Linux の能力チェックをバイパス</td></tr><tr><td>kretprobe</td><td>avc_denied</td><td>SELinux アクセス制御をバイパス</td></tr></tbody></table><h4 id="プローブ登録プロセス" tabindex="-1">プローブ登録プロセス <a class="header-anchor" href="#プローブ登録プロセス" aria-label="Permalink to “プローブ登録プロセス”">​</a></h4>',8)),h("div",C,[(n(),o(c,null,{default:t(()=>[a(r,{id:"mermaid-94",class:"mermaid my-class",graph:"flowchart%20TD%0A%20%20%20%20A%5B%E3%83%A2%E3%82%B8%E3%83%A5%E3%83%BC%E3%83%AB%E3%83%AD%E3%83%BC%E3%83%89%5D%20--%3E%20B%5Bexecve%20kprobe%20%E3%81%AE%E7%99%BB%E9%8C%B2%5D%0A%20%20%20%20B%20--%3E%20C%5Bcap_capable%20kretprobe%20%E3%81%AE%E7%99%BB%E9%8C%B2%5D%0A%20%20%20%20C%20--%3E%20D%5Bavc_denied%20kretprobe%20%E3%81%AE%E7%99%BB%E9%8C%B2%5D%0A%20%20%20%20D%20--%3E%20E%5B%E6%95%8F%E6%84%9F%E3%81%AA%E6%93%8D%E4%BD%9C%E3%81%AE%E7%9B%A3%E8%A6%96%2F%E3%83%8F%E3%82%A4%E3%82%B8%E3%83%A3%E3%83%83%E3%82%AF%5D%0A"})]),fallback:t(()=>s[0]||(s[0]=[k(" Loading... ",-1)])),_:1}))]),s[3]||(s[3]=l(`<hr><h3 id="_2-2-コア権限昇格ロジック" tabindex="-1">2.2 コア権限昇格ロジック <a class="header-anchor" href="#_2-2-コア権限昇格ロジック" aria-label="Permalink to “2.2 コア権限昇格ロジック”">​</a></h3><h4 id="部分コードスニペット" tabindex="-1">部分コードスニペット <a class="header-anchor" href="#部分コードスニペット" aria-label="Permalink to “部分コードスニペット”">​</a></h4><div class="language-c"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki shiki-themes github-light github-dark-dimmed" style="--shiki-light:#24292e;--shiki-dark:#adbac7;--shiki-light-bg:#fff;--shiki-dark-bg:#22272e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">struct</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> cred </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">cred </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">struct</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> cred </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">__task_cred</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(current);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">// 1. root に昇格</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">cred</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">uid </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> cred</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">euid </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> cred</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">suid </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> cred</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">fsuid </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> GLOBAL_ROOT_UID;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">cred</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">gid </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> cred</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">egid </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> cred</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">sgid </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> cred</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">fsgid </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> GLOBAL_ROOT_GID;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">cred</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">securebits </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">// 2. 全ての能力を付与</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">memset</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&amp;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">cred</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">-&gt;</span><span style="--shiki-light:#E36209;--shiki-dark:#F69D50;">cap_inheritable</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">0x</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">ff</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">sizeof</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">kernel_cap_t</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">));</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">memset</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&amp;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">cred</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">-&gt;</span><span style="--shiki-light:#E36209;--shiki-dark:#F69D50;">cap_permitted</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">0x</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">ff</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">sizeof</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">kernel_cap_t</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">));</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">memset</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&amp;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">cred</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">-&gt;</span><span style="--shiki-light:#E36209;--shiki-dark:#F69D50;">cap_effective</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">0x</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">ff</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">sizeof</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">kernel_cap_t</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">));</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">memset</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&amp;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">cred</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">-&gt;</span><span style="--shiki-light:#E36209;--shiki-dark:#F69D50;">cap_bset</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">0x</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">ff</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">sizeof</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">kernel_cap_t</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">));</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">memset</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&amp;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">cred</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">-&gt;</span><span style="--shiki-light:#E36209;--shiki-dark:#F69D50;">cap_ambient</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">0x</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">ff</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">sizeof</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">kernel_cap_t</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">));</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">// 3. seccomp を無効化 (状況に応じて)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">current_thread_info</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">()</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">syscall_work </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&amp;=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> ~</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">SYSCALL_WORK_SECCOMP;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">current_thread_info</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">()</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">flags </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&amp;=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> ~</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(TIF_SECCOMP </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">|</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> _TIF_SECCOMP);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">current</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">seccomp.mode </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">current</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">seccomp.filter </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> NULL</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">// 4. root グループを設定</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> (cred</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">group_info) {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">    // グループを root に設定 ...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}</span></span></code></pre></div><p><strong>詳細説明</strong>:</p><ul><li><strong>UID/GID の昇格</strong>: 現在のプロセスの全てのユーザーIDとグループIDを 0 に設定し、<code>root</code> 権限を取得します。</li><li><strong>能力ビットの全開</strong>: Linux の <code>capability</code> メカニズムは、細粒度の権限制御に使用されます。全てを <code>1</code> に設定することで、プロセスは全てのカーネル能力を持つようになります。</li><li><strong>seccomp の無効化</strong>: <code>seccomp</code> は Linux のシステムコールフィルタリングメカニズムです。無効化することで、プロセスは全てのシステムコールを自由に呼び出すことができます。</li><li><strong>グループ情報の root 化</strong>: プロセスの <code>group_info</code> を <code>root</code> グループに設定し、グループ権限による制限を回避します。</li></ul><hr><h3 id="_2-3-selinux-バイパスメカニズム" tabindex="-1">2.3 SELinux バイパスメカニズム <a class="header-anchor" href="#_2-3-selinux-バイパスメカニズム" aria-label="Permalink to “2.3 SELinux バイパスメカニズム”">​</a></h3><h4 id="部分コードスニペット-1" tabindex="-1">部分コードスニペット <a class="header-anchor" href="#部分コードスニペット-1" aria-label="Permalink to “部分コードスニペット”">​</a></h4><div class="language-c"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki shiki-themes github-light github-dark-dimmed" style="--shiki-light:#24292e;--shiki-dark:#adbac7;--shiki-light-bg:#fff;--shiki-dark-bg:#22272e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">// avc_denied kretprobe handler</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> (current</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">real_cred</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">uid.val </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">==</span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"> /* ホワイトリスト UID */</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    regs-&gt;regs[</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">  // ホワイトリスト UID は許可に設定</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">} </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">else</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> if</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">!</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">current</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">real_cred</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">uid.val) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    regs-&gt;regs[</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">  // root も同様に許可に設定</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}</span></span></code></pre></div><p><strong>詳細説明</strong>:</p><ul><li><strong>SELinux メカニズム</strong>: <code>SELinux</code> はアクセス制御決定関数（例: <code>avc_denied</code>）を使用して、プロセスのリソースへのアクセスを制限します。</li><li><strong>kretprobe hook</strong>: モジュールは kretprobe を使用して <code>avc_denied</code> をフックし、この関数が返るときに戻り値をハイジャックします。</li><li><strong>UID チェック</strong>: 特定の <code>UID</code>（例: <code>ShiroSU マネージャー</code> とユーザーが設定したホワイトリスト UID）または <code>root</code> のみに有効です。</li><li><strong>強制許可</strong>: 戻り値を 0 に設定し、アクセスが許可されたことを示し、SELinux のセキュリティポリシーをバイパスします。</li></ul><hr><h3 id="_2-4-能力チェックバイパス-cap-capable" tabindex="-1">2.4 能力チェックバイパス (cap_capable) <a class="header-anchor" href="#_2-4-能力チェックバイパス-cap-capable" aria-label="Permalink to “2.4 能力チェックバイパス (cap_capable)”">​</a></h3><h4 id="部分コードスニペット-2" tabindex="-1">部分コードスニペット <a class="header-anchor" href="#部分コードスニペット-2" aria-label="Permalink to “部分コードスニペット”">​</a></h4><div class="language-c"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki shiki-themes github-light github-dark-dimmed" style="--shiki-light:#24292e;--shiki-dark:#adbac7;--shiki-light-bg:#fff;--shiki-dark-bg:#22272e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">// cap_capable kretprobe handler</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> (current</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">real_cred</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">uid.val </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">==</span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"> /* ホワイトリスト UID */</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    regs-&gt;regs[</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">  // ホワイトリスト UID は許可に設定</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">} </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">else</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> if</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">!</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">current</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">real_cred</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">uid.val) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    regs-&gt;regs[</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">  // root も同様に許可に設定</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}</span></span></code></pre></div><p><strong>詳細説明</strong>:</p><ul><li><strong>cap_capable</strong>: Linux カーネル能力チェックの中核関数です。</li><li><strong>kretprobe hook</strong>: 能力チェックが返るときに戻り値をハイジャックします。</li><li><strong>UID チェックと許可</strong>: 指定された <code>UID</code> または <code>root</code> に対して許可を返し、全ての <code>capability</code> チェックをバイパスします。</li></ul><hr><h3 id="_2-5-プロセス監視と自動権限昇格" tabindex="-1">2.5 プロセス監視と自動権限昇格 <a class="header-anchor" href="#_2-5-プロセス監視と自動権限昇格" aria-label="Permalink to “2.5 プロセス監視と自動権限昇格”">​</a></h3><ul><li>kprobe を使用して <code>sys_execve</code> (具体的なアドレス名はカーネルバージョンとアーキテクチャによって異なります) をフックし、<code>su</code> のプロセス実行を監視します。</li><li><code>su</code> の実行を検出すると、自動的に権限昇格関数を呼び出して権限を昇格させます。</li></ul><div class="language-c line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki shiki-themes github-light github-dark-dimmed" style="--shiki-light:#24292e;--shiki-dark:#adbac7;--shiki-light-bg:#fff;--shiki-dark-bg:#22272e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">char</span><span style="--shiki-light:#E36209;--shiki-dark:#F69D50;"> buf</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">[</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">128</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> {</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">};</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">struct</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> Param param;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">param </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> *</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">struct</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> Param </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)regs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">-&gt;</span><span style="--shiki-light:#E36209;--shiki-dark:#F69D50;">regs</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">[</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">];</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> (</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">copy_from_user</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(buf, param.filename, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">sizeof</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(buf) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">))</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    return</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">!</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">strcmp</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(buf, </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;/system/bin/su&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)) {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">    // プロセスを root に昇格 ...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p><strong>説明</strong>:</p><ul><li><code>su</code> の実行を監視し、自動的に <code>root</code> に権限を昇格させます。</li></ul><hr><h2 id="_3-免責事項" tabindex="-1">3. 免責事項 <a class="header-anchor" href="#_3-免責事項" aria-label="Permalink to “3. 免責事項”">​</a></h2><h3 id="_3-1-ドキュメントの説明" tabindex="-1">3.1 ドキュメントの説明 <a class="header-anchor" href="#_3-1-ドキュメントの説明" aria-label="Permalink to “3.1 ドキュメントの説明”">​</a></h3><ul><li>このドキュメントで示されているコードは、ShiroSU カーネルの一部テストコードまたは擬似コードであり、一部はテストケースです。コードの品質と完全性には限りがある可能性がありますので、ご容赦ください。</li><li>このドキュメントの主な目的は、カーネルコードの継続的な進歩を示し、これらが空のコードではないことを証明することです。</li></ul><h3 id="_3-2-その他の免責事項" tabindex="-1">3.2 その他の免責事項 <a class="header-anchor" href="#_3-2-その他の免責事項" aria-label="Permalink to “3.2 その他の免責事項”">​</a></h3><ul><li><code>OOM. WG.</code> は技術交流とコミュニティ構築に尽力しており、全ての開発者の努力と成果を尊重しています。</li></ul>`,30)),a(d),a(g)])}const x=A(D,[["render",B]]);export{f as __pageData,x as default};
