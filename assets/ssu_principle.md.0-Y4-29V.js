import{_ as A,a6 as i,L as o,M as n,W as h,a7 as a,aa as l,h as k,O as y,P as t,b8 as c}from"./chunks/framework.DSr6HixA.js";const f=JSON.parse('{"title":"ShiroSU 内核提权部分讲解","description":"","frontmatter":{"layout":"doc","title":"ShiroSU 内核提权部分讲解","footer":false,"breadcrumbs":[{"title":"ShiroSU","link":"/zh"},{"title":"ssu","link":""},{"title":"ShiroSU 内核提权部分讲解","link":"/zh/ssu/principle"}]},"headers":[],"relativePath":"ssu/principle.md","filePath":"zh/ssu/principle.md","lastUpdated":1755655878000}'),D={name:"ssu/principle.md"},C={align:"center"};function B(F,s,E,b,u,_){const p=i("ArticleMetadata"),e=i("NolebasePageProperties"),r=i("Mermaid"),d=i("NolebaseGitContributors"),g=i("NolebaseGitChangelog");return n(),o("div",null,[s[1]||(s[1]=h("h1",{id:"shirosu-内核提权部分讲解",tabindex:"-1"},[k("ShiroSU 内核提权部分讲解 "),h("a",{class:"header-anchor",href:"#shirosu-内核提权部分讲解","aria-label":"Permalink to “ShiroSU 内核提权部分讲解”"},"​")],-1)),a(p),a(e),s[2]||(s[2]=l('<h2 id="_1-概述" tabindex="-1">1. 概述 <a class="header-anchor" href="#_1-概述" aria-label="Permalink to “1. 概述”">​</a></h2><p>ShiroSU 内核部分 是一个针对 Android 内核的提权与 Selinux 处理的部分：</p><ul><li><strong>root 权限提升</strong>：自动将指定进程提权为 root。</li><li><strong>能力管理绕过</strong>：通过 hook 能力检查函数，绕过 Linux 能力限制。</li><li><strong>SELinux 绕过</strong>：hook SELinux 访问控制，允许敏感操作。</li><li><strong>动态进程监控</strong>：监控 <code>su</code> 执行自动触发提权操作。</li></ul><hr><h2 id="_2-技术架构与核心机制" tabindex="-1">2. 技术架构与核心机制 <a class="header-anchor" href="#_2-技术架构与核心机制" aria-label="Permalink to “2. 技术架构与核心机制”">​</a></h2><h3 id="_2-1-关键-hook-点与探针部署" tabindex="-1">2.1 关键 Hook 点与探针部署 <a class="header-anchor" href="#_2-1-关键-hook-点与探针部署" aria-label="Permalink to “2.1 关键 Hook 点与探针部署”">​</a></h3><table tabindex="0"><thead><tr><th>探针类型</th><th>Hook 函数</th><th>功能说明</th></tr></thead><tbody><tr><td>kprobe</td><td>sys_execve (按情况)</td><td>监控敏感命令执行，触发提权</td></tr><tr><td>kretprobe</td><td>cap_capable</td><td>绕过 Linux 能力检查</td></tr><tr><td>kretprobe</td><td>avc_denied</td><td>绕过 SELinux 访问控制</td></tr></tbody></table><h4 id="探针注册流程" tabindex="-1">探针注册流程 <a class="header-anchor" href="#探针注册流程" aria-label="Permalink to “探针注册流程”">​</a></h4>',8)),h("div",C,[(n(),y(c,null,{default:t(()=>[a(r,{id:"mermaid-94",class:"mermaid my-class",graph:"flowchart%20TD%0A%20%20%20%20A%5B%E6%A8%A1%E5%9D%97%E5%8A%A0%E8%BD%BD%5D%20--%3E%20B%5B%E6%B3%A8%E5%86%8C%20execve%20kprobe%5D%0A%20%20%20%20B%20--%3E%20C%5B%E6%B3%A8%E5%86%8C%20cap_capable%20kretprobe%5D%0A%20%20%20%20C%20--%3E%20D%5B%E6%B3%A8%E5%86%8C%20avc_denied%20kretprobe%5D%0A%20%20%20%20D%20--%3E%20E%5B%E7%9B%91%E6%8E%A7%2F%E5%8A%AB%E6%8C%81%E6%95%8F%E6%84%9F%E6%93%8D%E4%BD%9C%5D%0A"})]),fallback:t(()=>s[0]||(s[0]=[k(" Loading... ",-1)])),_:1}))]),s[3]||(s[3]=l(`<hr><h3 id="_2-2-核心提权逻辑" tabindex="-1">2.2 核心提权逻辑 <a class="header-anchor" href="#_2-2-核心提权逻辑" aria-label="Permalink to “2.2 核心提权逻辑”">​</a></h3><h4 id="部分代码片段" tabindex="-1">部分代码片段 <a class="header-anchor" href="#部分代码片段" aria-label="Permalink to “部分代码片段”">​</a></h4><div class="language-c"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki shiki-themes github-light github-dark-dimmed" style="--shiki-light:#24292e;--shiki-dark:#adbac7;--shiki-light-bg:#fff;--shiki-dark-bg:#22272e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">struct</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> cred </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">cred </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">struct</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> cred </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">__task_cred</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(current);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">// 1. 提权为 root</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">cred</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">uid </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> cred</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">euid </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> cred</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">suid </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> cred</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">fsuid </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> GLOBAL_ROOT_UID;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">cred</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">gid </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> cred</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">egid </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> cred</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">sgid </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> cred</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">fsgid </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> GLOBAL_ROOT_GID;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">cred</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">securebits </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">// 2. 赋予所有能力</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">memset</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&amp;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">cred</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">-&gt;</span><span style="--shiki-light:#E36209;--shiki-dark:#F69D50;">cap_inheritable</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">0x</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">ff</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">sizeof</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">kernel_cap_t</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">));</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">memset</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&amp;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">cred</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">-&gt;</span><span style="--shiki-light:#E36209;--shiki-dark:#F69D50;">cap_permitted</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">0x</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">ff</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">sizeof</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">kernel_cap_t</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">));</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">memset</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&amp;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">cred</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">-&gt;</span><span style="--shiki-light:#E36209;--shiki-dark:#F69D50;">cap_effective</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">0x</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">ff</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">sizeof</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">kernel_cap_t</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">));</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">memset</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&amp;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">cred</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">-&gt;</span><span style="--shiki-light:#E36209;--shiki-dark:#F69D50;">cap_bset</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">0x</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">ff</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">sizeof</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">kernel_cap_t</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">));</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">memset</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&amp;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">cred</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">-&gt;</span><span style="--shiki-light:#E36209;--shiki-dark:#F69D50;">cap_ambient</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">0x</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">ff</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">sizeof</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">kernel_cap_t</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">));</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">// 3. 关闭 seccomp (部分需要依情况)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">current_thread_info</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">()</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">syscall_work </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&amp;=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> ~</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">SYSCALL_WORK_SECCOMP;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">current_thread_info</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">()</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">flags </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&amp;=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> ~</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(TIF_SECCOMP </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">|</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> _TIF_SECCOMP);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">current</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">seccomp.mode </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">current</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">seccomp.filter </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> NULL</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">// 4. 设置 root 组</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> (cred</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">group_info) {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">    // 设置组为 root ...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}</span></span></code></pre></div><p><strong>详细说明：</strong></p><ul><li><strong>UID/GID 提升</strong>：将当前进程的所有用户和组 ID 设为 0，获得 <code>root</code> 身份。</li><li><strong>能力位全开</strong>：Linux 的 <code>capability</code> 机制用于细粒度权限控制，全部置 <code>1</code> 后进程拥有所有内核能力。</li><li><strong>关闭 seccomp</strong>：<code>seccomp</code> 是 Linux 的系统调用过滤机制，关闭后进程可自由调用所有系统调用。</li><li><strong>组信息 root 化</strong>：将进程的 <code>group_info</code> 指向 <code>root</code> 组，避免组权限限制。</li></ul><hr><h3 id="_2-3-selinux-绕过机制" tabindex="-1">2.3 SELinux 绕过机制 <a class="header-anchor" href="#_2-3-selinux-绕过机制" aria-label="Permalink to “2.3 SELinux 绕过机制”">​</a></h3><h4 id="部分代码片段-1" tabindex="-1">部分代码片段 <a class="header-anchor" href="#部分代码片段-1" aria-label="Permalink to “部分代码片段”">​</a></h4><div class="language-c"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki shiki-themes github-light github-dark-dimmed" style="--shiki-light:#24292e;--shiki-dark:#adbac7;--shiki-light-bg:#fff;--shiki-dark-bg:#22272e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">// avc_denied kretprobe handler</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> (current</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">real_cred</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">uid.val </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">==</span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"> /* 白名单 UID */</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    regs-&gt;regs[</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">  // 白名单 UID 直接设置允许</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">} </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">else</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> if</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">!</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">current</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">real_cred</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">uid.val) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    regs-&gt;regs[</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">  // root 同样设置允许</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}</span></span></code></pre></div><p><strong>详细说明：</strong></p><ul><li><strong>SELinux 机制</strong>：<code>SELinux</code> 通过访问控制决策函数（如 <code>avc_denied</code>）限制进程访问资源。</li><li><strong>kretprobe hook</strong>：模块通过 kretprobe hook <code>avc_denied</code>，在该函数返回时劫持返回值。</li><li><strong>UID 检查</strong>：仅对特定 <code>UID</code>（如 <code>ShiroSU 管理器</code> 以及由用户设置的白名单 UID）或 <code>root</code> 生效。</li><li><strong>强制放行</strong>：将返回值设为 0，表示访问被允许，从而绕过 SELinux 的安全策略。</li></ul><hr><h3 id="_2-4-能力检查绕过-cap-capable" tabindex="-1">2.4 能力检查绕过（cap_capable） <a class="header-anchor" href="#_2-4-能力检查绕过-cap-capable" aria-label="Permalink to “2.4 能力检查绕过（cap_capable）”">​</a></h3><h4 id="部分代码片段-2" tabindex="-1">部分代码片段 <a class="header-anchor" href="#部分代码片段-2" aria-label="Permalink to “部分代码片段”">​</a></h4><div class="language-c"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki shiki-themes github-light github-dark-dimmed" style="--shiki-light:#24292e;--shiki-dark:#adbac7;--shiki-light-bg:#fff;--shiki-dark-bg:#22272e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">// cap_capable kretprobe handler</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> (current</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">real_cred</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">uid.val </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">==</span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"> /* 白名单 UID */</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    regs-&gt;regs[</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">  // 白名单 UID 直接设置允许</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">} </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">else</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> if</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">!</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">current</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">real_cred</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">uid.val) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    regs-&gt;regs[</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">  // root 同样设置允许</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}</span></span></code></pre></div><p><strong>详细说明：</strong></p><ul><li><strong>cap_capable</strong>：Linux 内核能力检查的核心函数。</li><li><strong>kretprobe hook</strong>：在能力检查返回时劫持返回值。</li><li><strong>UID 检查与放行</strong>：对指定 <code>UID</code> 或 <code>root</code> 直接返回允许，绕过所有 <code>capability</code> 检查。</li></ul><hr><h3 id="_2-5-进程监控与自动提权" tabindex="-1">2.5 进程监控与自动提权 <a class="header-anchor" href="#_2-5-进程监控与自动提权" aria-label="Permalink to “2.5 进程监控与自动提权”">​</a></h3><ul><li>通过 kprobe hook <code>sys_execve</code> (具体地址名称需要依内核版本以及架构而定)，监控进程执行 <code>su</code>。</li><li>检测到执行 <code>su</code> 时，自动调用提权函数实现提权。</li></ul><div class="language-c line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki shiki-themes github-light github-dark-dimmed" style="--shiki-light:#24292e;--shiki-dark:#adbac7;--shiki-light-bg:#fff;--shiki-dark-bg:#22272e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">char</span><span style="--shiki-light:#E36209;--shiki-dark:#F69D50;"> buf</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">[</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">128</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> {</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">};</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">struct</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> Param param;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">param </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> *</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">struct</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> Param </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)regs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">-&gt;</span><span style="--shiki-light:#E36209;--shiki-dark:#F69D50;">regs</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">[</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">];</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> (</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">copy_from_user</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(buf, param.filename, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">sizeof</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(buf) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">))</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    return</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">!</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">strcmp</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(buf, </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;/system/bin/su&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)) {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">    // 提权进程为 root ...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p><strong>说明：</strong></p><ul><li>监控 <code>su</code> 执行，自动提权为 <code>root</code>。</li></ul><hr><h2 id="_3-声明" tabindex="-1">3. 声明 <a class="header-anchor" href="#_3-声明" aria-label="Permalink to “3. 声明”">​</a></h2><h3 id="_3-1-文档说明" tabindex="-1">3.1 文档说明 <a class="header-anchor" href="#_3-1-文档说明" aria-label="Permalink to “3.1 文档说明”">​</a></h3><ul><li>本文档所展示的代码为 ShiroSU 内核的部分测试代码或伪代码，部分为测试用例，代码质量和完整性可能有限，请嘴下留情。</li><li>本文档主要目的是展示内核代码的持续进步，证明这些并非空壳代码</li></ul><h3 id="_3-2-其他声明" tabindex="-1">3.2 其他声明 <a class="header-anchor" href="#_3-2-其他声明" aria-label="Permalink to “3.2 其他声明”">​</a></h3><ul><li><code>O.O.M. W.G.</code> 致力于技术交流与社区建设，尊重每一位开发者的努力与成果。</li></ul>`,30)),a(d),a(g)])}const x=A(D,[["render",B]]);export{f as __pageData,x as default};
